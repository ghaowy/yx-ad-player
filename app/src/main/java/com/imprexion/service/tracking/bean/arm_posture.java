// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tracking.proto

package com.imprexion.service.tracking.bean;

/**
 * Protobuf enum {@code tracking.arm_posture}
 */
public enum arm_posture
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>no_arm_posture = 0;</code>
   */
  no_arm_posture(0),
  /**
   * <code>staight_high = 1;</code>
   */
  staight_high(1),
  /**
   * <code>high = 2;</code>
   */
  high(2),
  /**
   * <code>flat = 3;</code>
   */
  flat(3),
  /**
   * <code>low = 4;</code>
   */
  low(4),
  /**
   * <code>armDown = 5;</code>
   */
  armDown(5),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>no_arm_posture = 0;</code>
   */
  public static final int no_arm_posture_VALUE = 0;
  /**
   * <code>staight_high = 1;</code>
   */
  public static final int staight_high_VALUE = 1;
  /**
   * <code>high = 2;</code>
   */
  public static final int high_VALUE = 2;
  /**
   * <code>flat = 3;</code>
   */
  public static final int flat_VALUE = 3;
  /**
   * <code>low = 4;</code>
   */
  public static final int low_VALUE = 4;
  /**
   * <code>armDown = 5;</code>
   */
  public static final int armDown_VALUE = 5;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static arm_posture valueOf(int value) {
    return forNumber(value);
  }

  public static arm_posture forNumber(int value) {
    switch (value) {
      case 0: return no_arm_posture;
      case 1: return staight_high;
      case 2: return high;
      case 3: return flat;
      case 4: return low;
      case 5: return armDown;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<arm_posture>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      arm_posture> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<arm_posture>() {
          public arm_posture findValueByNumber(int number) {
            return arm_posture.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.imprexion.service.tracking.bean.TrackingMessage.getDescriptor().getEnumTypes().get(2);
  }

  private static final arm_posture[] VALUES = values();

  public static arm_posture valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private arm_posture(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:tracking.arm_posture)
}

