// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tracking.proto

package com.imprexion.service.tracking.bean;

/**
 * Protobuf enum {@code tracking.hand_gesture}
 */
public enum hand_gesture
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>none = 0;</code>
   */
  none(0),
  /**
   * <code>palm = 1;</code>
   */
  palm(1),
  /**
   * <code>grab = 2;</code>
   */
  grab(2),
  /**
   * <code>thumb_up = 3;</code>
   */
  thumb_up(3),
  /**
   * <code>victory = 4;</code>
   */
  victory(4),
  /**
   * <code>holding_prog = 5;</code>
   */
  holding_prog(5),
  /**
   * <code>wave = 6;</code>
   */
  wave(6),
  /**
   * <code>rising_hand = 7;</code>
   */
  rising_hand(7),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>none = 0;</code>
   */
  public static final int none_VALUE = 0;
  /**
   * <code>palm = 1;</code>
   */
  public static final int palm_VALUE = 1;
  /**
   * <code>grab = 2;</code>
   */
  public static final int grab_VALUE = 2;
  /**
   * <code>thumb_up = 3;</code>
   */
  public static final int thumb_up_VALUE = 3;
  /**
   * <code>victory = 4;</code>
   */
  public static final int victory_VALUE = 4;
  /**
   * <code>holding_prog = 5;</code>
   */
  public static final int holding_prog_VALUE = 5;
  /**
   * <code>wave = 6;</code>
   */
  public static final int wave_VALUE = 6;
  /**
   * <code>rising_hand = 7;</code>
   */
  public static final int rising_hand_VALUE = 7;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static hand_gesture valueOf(int value) {
    return forNumber(value);
  }

  public static hand_gesture forNumber(int value) {
    switch (value) {
      case 0: return none;
      case 1: return palm;
      case 2: return grab;
      case 3: return thumb_up;
      case 4: return victory;
      case 5: return holding_prog;
      case 6: return wave;
      case 7: return rising_hand;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<hand_gesture>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      hand_gesture> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<hand_gesture>() {
          public hand_gesture findValueByNumber(int number) {
            return hand_gesture.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.imprexion.service.tracking.bean.TrackingMessage.getDescriptor().getEnumTypes().get(0);
  }

  private static final hand_gesture[] VALUES = values();

  public static hand_gesture valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private hand_gesture(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:tracking.hand_gesture)
}

